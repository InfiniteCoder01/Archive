#include "windows.cjp"

bool Is2power(int x) { return (!(x & (x - 1))); }
long ALIGN_DOWN(long x, long align) { return (x & ~(align - 1)); }
long ALIGN_UP(long x, long align) { return ((x & (align - 1)) ? ALIGN_DOWN(x, align) + align : x); }
short wchar(char l, char h) { return ((l << 8) + h); }

class PortableExecutable {
	File pefile = new File();
	long filesize = sizeof(pefile.bytes);
	IMAGE_DOS_HEADER dos_header;
	
	void testDosHeader() {
		dos_header = pefile;
		
		if(dos_header.e_magic != (('M' << 8) + 'Z')) {
			println("IMAGE_DOS_HEADER signature is incorrect");
			return 0;
		}
		if((dos_header.e_lfanew % sizeof(DWORD)) != 0) {
			println("PE header is not DWORD-aligned");
			return 0;
		}
	}
	
	void read() {
		testDosHeader();
	}
};